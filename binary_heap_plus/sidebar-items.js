initSidebarItems({"struct":[["BinaryHeap","A priority queue implemented with a binary heap."],["Drain","A draining iterator over the elements of a `BinaryHeap`."],["FnComparator","The comparator defined by closure"],["IntoIter","An owning iterator over the elements of a `BinaryHeap`."],["Iter","An iterator over the elements of a `BinaryHeap`."],["KeyComparator","The comparator ordered by key"],["MaxComparator","For `T` that implements `Ord`, you can use this struct to quickly set up a max heap."],["MinComparator","For `T` that implements `Ord`, you can use this struct to quickly set up a min heap."],["PeekMut","Structure wrapping a mutable reference to the greatest item on a `BinaryHeap`."]],"trait":[["Compare","Simpler replacement for the `Ord` trait. The difference is that you can define multiple sort orders on a single type `T`. Unlike `Ord` trait, `Compare<T>` trait can be easily implemented by providing a single function."]]});